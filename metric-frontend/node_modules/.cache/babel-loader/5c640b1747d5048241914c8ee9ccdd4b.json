{"ast":null,"code":"var _jsxFileName = \"/Users/dmirza509/PycharmProjects/MetricReconciliation/metric-frontend/src/App.js\";\nimport React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useParams } from \"react-router-dom\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/query/:ntid\",\n            component: QueryForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/reporter/:ntid\",\n            component: ReporterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/usertype/:ntid\",\n            component: UserType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            component: LoginForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      password: '',\n      show_error: false\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const resp = await axios.post('http://localhost:5000/login', {\n        name: this.state.name,\n        password: this.state.password\n      });\n      this.setState({\n        name: '',\n        password: ''\n      });\n\n      if (resp.data.auth) {\n        this.setState({\n          show_error: false\n        });\n        this.props.history.push(`/usertype/` + this.state.name);\n      } else {\n        this.setState({\n          show_error: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"formtext\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            'fontWeight': 'bold',\n            'fontSize': '3vw'\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), \"NTID:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.name,\n        onChange: event => this.setState({\n          name: event.target.value\n        }),\n        placeholder: \"NTID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }, this), \"Password:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: this.state.password,\n        onChange: event => this.setState({\n          password: event.target.value\n        }),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), this.state.show_error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nclass UserType extends React.Component {\n  render() {\n    let {\n      ntid\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"headertext\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            'fontWeight': 'bold',\n            'fontSize': '3vw'\n          },\n          children: \"Select User Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => this.props.history.push('/reporter/' + ntid),\n        children: \"Reporter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 97\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => this.props.history.push('/query/' + ntid),\n        children: \"Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ReporterForm extends React.Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.state = {\n      reporter: '',\n      metricName: '',\n      database: 'NDW',\n      schema: '',\n      table: '',\n      metricId: '',\n      metricCol: '',\n      excl_bulk: false,\n      excl_resi: true,\n      excl_courtesy: false,\n      ned: true,\n      cen: true,\n      wes: true,\n      timeCol: '',\n      timeDensity: 'D',\n      startDate: '',\n      endDate: ''\n    };\n    this.handleSubmit = _s(async event => {\n      _s();\n\n      let {\n        ntid\n      } = useParams();\n      event.preventDefault();\n      const resp = await axios.put('http://localhost:5000/report', {\n        reporter: ntid,\n        metricName: this.state.metricName,\n        database: this.state.database,\n        schema: this.state.schema,\n        table: this.state.table,\n        metricId: this.state.metricId,\n        metricCol: this.state.metricCol,\n        exclusions: {\n          'excl_bulk': this.state.excl_bulk,\n          'excl_resi': this.state.excl_resi,\n          'excl_courtesy': this.state.excl_courtesy\n        },\n        geos: {\n          'ned': this.state.ned,\n          'cen': this.state.cen,\n          'wes': this.state.wes\n        },\n        timeCol: this.state.timeCol,\n        timeDensity: this.state.timeDensity,\n        dateRange: {\n          'start_date': this.state.startDate,\n          'end_date': this.state.endDate\n        }\n      });\n      this.setState({\n        reporter: '',\n        metricName: '',\n        database: 'NDW',\n        schema: '',\n        table: '',\n        metricId: '',\n        metricCol: '',\n        excl_bulk: false,\n        excl_resi: true,\n        excl_courtesy: false,\n        ned: true,\n        cen: true,\n        wes: true,\n        timeCol: '',\n        timeDensity: 'D',\n        startDate: '',\n        endDate: ''\n      });\n      this.props.history.push(`/usertype`);\n    }, \"iO22nlDm/UY2rUo0WJ8zDLMXoMw=\", false, function () {\n      return [useParams];\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"formtext\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            'fontWeight': 'bold',\n            'fontSize': '3vw'\n          },\n          children: \"Add New Metric\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), \"Metric Name*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.metricName,\n        onChange: event => this.setState({\n          metricName: event.target.value\n        }),\n        placeholder: \"metric name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 12\n      }, this), \"Database*:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.database,\n        onChange: event => this.setState({\n          database: event.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NDW\",\n          children: \"NDW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MELD\",\n          children: \"MELD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), \"required\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }, this), \"Schema*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.schema,\n        onChange: event => this.setState({\n          schema: event.target.value\n        }),\n        placeholder: \"schema\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 12\n      }, this), \"Table*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.table,\n        onChange: event => this.setState({\n          table: event.target.value\n        }),\n        placeholder: \"table\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 12\n      }, this), \"Metric Id*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.metricId,\n        onChange: event => this.setState({\n          metricId: event.target.value\n        }),\n        placeholder: \"metric Id\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 12\n      }, this), \"Metric Column*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.metricCol,\n        onChange: event => this.setState({\n          metricCol: event.target.value\n        }),\n        placeholder: \"metric column\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), \"Exclude Bulk?*\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"Yes\",\n        checked: this.state.excl_bulk === true,\n        onChange: event => this.setState({\n          excl_bulk: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), \" Yes\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"No\",\n        checked: this.state.excl_bulk === false,\n        onChange: event => this.setState({\n          excl_bulk: false\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), \" No \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }, this), \"Resi?*\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"Yes\",\n        checked: this.state.excl_resi === true,\n        onChange: event => this.setState({\n          excl_resi: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), \" Yes\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"No\",\n        checked: this.state.excl_resi === false,\n        onChange: event => this.setState({\n          excl_resi: false\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), \" No \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }, this), \"Exclude Courtesy?*\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"Yes\",\n        checked: this.state.excl_courtesy === true,\n        onChange: event => this.setState({\n          excl_courtesy: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), \" Yes\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"No\",\n        checked: this.state.excl_courtesy === false,\n        onChange: event => this.setState({\n          excl_courtesy: false\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), \" No \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 20\n      }, this), \"Divisions*\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: \"NED\",\n        checked: this.state.ned === true,\n        onChange: event => this.setState({\n          ned: event.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), \" NED\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: \"CEN\",\n        checked: this.state.cen === true,\n        onChange: event => this.setState({\n          cen: event.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), \" CEN\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: \"WES\",\n        checked: this.state.wes === true,\n        onChange: event => this.setState({\n          wes: event.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), \" WES \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), \"Time Column*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.timeCol,\n        onChange: event => this.setState({\n          timeCol: event.target.value\n        }),\n        placeholder: \"time column\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), \"Time Granularity*:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.timeDensity,\n        onChange: event => this.setState({\n          timeDensity: event.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"D\",\n          children: \"Daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"W\",\n          children: \"Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"M\",\n          children: \"Monthly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Y\",\n          children: \"Yearly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DW\",\n          children: \"Day of Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), \"required\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 24\n      }, this), \"Start Date*:\\xA0\", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: this.state.startDate,\n        onChange: date => this.setState({\n          startDate: date\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 66\n      }, this), \"End Date*:\\xA0\", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: this.state.endDate,\n        onChange: date => this.setState({\n          endDate: date\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nclass QueryForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      metricName1: '',\n      table1: '',\n      metricName2: '',\n      table2: '',\n      show_error: false\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const resp = await axios.post('http://localhost:5000/query', {\n        metricName1: this.state.metricName1,\n        table1: this.state.table1,\n        metricName2: this.state.metricName2,\n        table2: this.state.table2\n      });\n      this.setState({\n        metricName1: '',\n        table1: '',\n        metricName2: '',\n        table2: '',\n        show_error: false\n      });\n\n      if (resp.data.status) {\n        this.setState({\n          show_error: false\n        });\n        window.Bokeh.embed.embed_item(resp.data.plot, 'plot');\n      } else {\n        this.setState({\n          show_error: true\n        });\n      }\n\n      console.log(resp);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"formtext\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              'fontWeight': 'bold',\n              'fontSize': '3vw'\n            },\n            children: \"Query Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metricInput\",\n          style: {\n            \"display\": \"inline-block\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Metric 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 72\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 88\n          }, this), \"Metric Name*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.metricName1,\n            onChange: event => this.setState({\n              metricName1: event.target.value\n            }),\n            placeholder: \"metric name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 12\n          }, this), \"Table*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.table1,\n            onChange: event => this.setState({\n              table1: event.target.value\n            }),\n            placeholder: \"table\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metricInput\",\n          style: {\n            \"display\": \"inline-block\",\n            \"marginLeft\": \"20px\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Metric 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 93\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 109\n          }, this), \"Metric Name*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.metricName2,\n            onChange: event => this.setState({\n              metricName2: event.target.value\n            }),\n            placeholder: \"metric name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 12\n          }, this), \"Table*:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.table2,\n            onChange: event => this.setState({\n              table2: event.target.value\n            }),\n            placeholder: \"table\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 9\n        }, this), this.state.show_error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Metric not defined!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"plot\",\n        className: \"bk-root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmirza509/PycharmProjects/MetricReconciliation/metric-frontend/src/App.js"],"names":["React","DatePicker","axios","BrowserRouter","Router","Switch","Route","Link","useHistory","useParams","App","Component","render","QueryForm","ReporterForm","UserType","LoginForm","state","name","password","show_error","handleSubmit","event","preventDefault","resp","post","setState","data","auth","props","history","push","target","value","ntid","reporter","metricName","database","schema","table","metricId","metricCol","excl_bulk","excl_resi","excl_courtesy","ned","cen","wes","timeCol","timeDensity","startDate","endDate","put","exclusions","geos","dateRange","checked","date","metricName1","table1","metricName2","table2","status","window","Bokeh","embed","embed_item","plot","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useParams\n} from \"react-router-dom\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends React.Component {\n\trender() {\n  \treturn (\n    \t<div>\n        <Router>\n        <Switch>\n          <Route path=\"/query/:ntid\" component={QueryForm} />\n          <Route path=\"/reporter/:ntid\" component={ReporterForm} />\n          <Route path=\"/usertype/:ntid\" component={UserType} />\n          <Route path=\"/\" component={LoginForm} />\n        </Switch>\n        </Router>\n    \t</div>\n    );\n  }\t\n}\n\nclass LoginForm extends React.Component {\n  state = { name: '', password: '', show_error: false};\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const resp = await axios.post('http://localhost:5000/login', {\n      name : this.state.name,\n      password : this.state.password\n    });\n    this.setState({ name: '', password: '' });\n\n    if (resp.data.auth) {\n      this.setState({show_error: false})\n      this.props.history.push(`/usertype/` + this.state.name)\n    }\n    else {\n      this.setState({show_error: true})\n    }\n  };\n\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n      <span className=\"formtext\"><p style={{'fontWeight':'bold','fontSize':'3vw'}}>Sign In</p></span>\n      NTID:&nbsp;\n    \t  <input \n          type=\"text\" \n          value={this.state.name}\n          onChange={event => this.setState({ name: event.target.value})}\n          placeholder=\"NTID\" \n          required \n        /> <br/>\n        Password:&nbsp;\n        <input \n          type=\"password\" \n          value={this.state.password}\n          onChange={event => this.setState({ password: event.target.value})}\n          placeholder=\"Password\" \n          required \n        /> <br/>\n        <button>Login</button>\n        {this.state.show_error ? <p>User not found!</p>:null}\n    \t</form>\n    );\n  }\n}\n\nclass UserType extends React.Component {\n  render() { \n    let {ntid} = useParams()\n    return(\n      <div>\n      <span className=\"headertext\"><p style={{'fontWeight':'bold','fontSize':'3vw'}}>Select User Type</p></span>\n      <button onClick={event => this.props.history.push('/reporter/' + ntid)}>Reporter</button> <br/>\n      <button onClick={event => this.props.history.push('/query/' + ntid)}>Query</button>\n      </div>\n    );\n  }\n}\n\nclass ReporterForm extends React.Component {\n  state = { reporter: '', \n            metricName: '',\n            database: 'NDW',\n            schema: '',\n            table: '',\n            metricId: '',\n            metricCol: '',\n            excl_bulk: false,\n            excl_resi: true,\n            excl_courtesy: false,\n            ned: true,\n            cen: true,\n            wes: true,\n            timeCol: '',\n            timeDensity: 'D',\n            startDate: '',\n            endDate: ''\n          };\n\n  handleSubmit = async (event) => {\n    let {ntid} = useParams()\n    event.preventDefault();\n    const resp = await axios.put('http://localhost:5000/report', {\n      reporter: ntid, \n      metricName: this.state.metricName,\n      database: this.state.database,\n      schema: this.state.schema,\n      table: this.state.table,\n      metricId: this.state.metricId,\n      metricCol: this.state.metricCol,\n      exclusions: {'excl_bulk': this.state.excl_bulk, \n                  'excl_resi': this.state.excl_resi, \n                  'excl_courtesy': this.state.excl_courtesy},\n      geos: {'ned': this.state.ned, \n            'cen': this.state.cen, \n            'wes': this.state.wes},\n      timeCol: this.state.timeCol,\n      timeDensity: this.state.timeDensity,\n      dateRange: {'start_date':this.state.startDate, 'end_date':this.state.endDate}\n    });\n\n    this.setState({ reporter: '', \n            metricName: '',\n            database: 'NDW',\n            schema: '',\n            table: '',\n            metricId: '',\n            metricCol: '',\n            excl_bulk: false,\n            excl_resi: true,\n            excl_courtesy: false,\n            ned: true,\n            cen: true,\n            wes: true,\n            timeCol: '',\n            timeDensity: 'D',\n            startDate: '',\n            endDate: '' });\n            \n    this.props.history.push(`/usertype`)\n  \n  };\n    \n  render() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n      <span className=\"formtext\"><p style={{'fontWeight':'bold','fontSize':'3vw'}}>Add New Metric</p></span>\n    \t  Metric Name*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.metricName}\n          onChange={event => this.setState({ metricName: event.target.value})}\n          placeholder=\"metric name\" \n          required \n        /> <br/>\n        Database*:&nbsp;\n        <select \n          value={this.state.database}\n          onChange={event => this.setState({ database: event.target.value})}>\n            <option value=\"NDW\">NDW</option>\n            <option value=\"MELD\">MELD</option>\n          required \n        </select> <br/>\n        Schema*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.schema}\n          onChange={event => this.setState({ schema: event.target.value})}\n          placeholder=\"schema\" \n          required \n        /> <br/>\n        Table*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.table}\n          onChange={event => this.setState({ table: event.target.value})}\n          placeholder=\"table\" \n          required \n        /> <br/>\n        Metric Id*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.metricId}\n          onChange={event => this.setState({ metricId: event.target.value})}\n          placeholder=\"metric Id\" \n          required \n        /> <br/>      \n        Metric Column*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.metricCol}\n          onChange={event => this.setState({ metricCol: event.target.value})}\n          placeholder=\"metric column\" \n          required \n        /> <br/><br/>\n\n        Exclude Bulk?*&nbsp;\n        <input \n          type=\"radio\" \n          value=\"Yes\"\n          checked={this.state.excl_bulk === true}\n          onChange={event => this.setState({ excl_bulk: true})}\n          required \n        /> Yes \n        <input \n          type=\"radio\" \n          value=\"No\"\n          checked={this.state.excl_bulk === false}\n          onChange={event => this.setState({ excl_bulk: false})}\n          required \n        /> No <br/>\n\n        Resi?*&nbsp;\n        <input \n          type=\"radio\" \n          value=\"Yes\"\n          checked={this.state.excl_resi === true}\n          onChange={event => this.setState({ excl_resi: true})}\n          required \n        /> Yes \n        <input \n          type=\"radio\" \n          value=\"No\"\n          checked={this.state.excl_resi === false}\n          onChange={event => this.setState({ excl_resi: false})}\n          required \n        /> No <br/> \n\n        Exclude Courtesy?*&nbsp;\n        <input \n          type=\"radio\" \n          value=\"Yes\"\n          checked={this.state.excl_courtesy === true}\n          onChange={event => this.setState({ excl_courtesy: true})}\n          required \n        /> Yes \n        <input \n          type=\"radio\" \n          value=\"No\"\n          checked={this.state.excl_courtesy === false}\n          onChange={event => this.setState({ excl_courtesy: false})}\n          required \n        /> No <br/><br/>\n\n        Divisions*&nbsp;\n        <input \n          type=\"checkbox\" \n          value=\"NED\"\n          checked={this.state.ned === true}\n          onChange={event => this.setState({ ned: event.target.checked})}\n        /> NED \n        <input \n          type=\"checkbox\" \n          value=\"CEN\"\n          checked={this.state.cen === true}\n          onChange={event => this.setState({ cen: event.target.checked})}\n        /> CEN\n        <input \n          type=\"checkbox\" \n          value=\"WES\"\n          checked={this.state.wes === true}\n          onChange={event => this.setState({ wes: event.target.checked})}\n        /> WES <br/><br/>\n\n        Time Column*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.timeCol}\n          onChange={event => this.setState({ timeCol: event.target.value})}\n          placeholder=\"time column\" \n          required \n        /><br/>\n        Time Granularity*:&nbsp;\n        <select \n          value={this.state.timeDensity}\n          onChange={event => this.setState({ timeDensity: event.target.value})}>\n            <option value=\"D\">Daily</option>\n            <option value=\"W\">Weekly</option>\n            <option value=\"M\">Monthly</option>\n            <option value=\"Y\">Yearly</option>\n            <option value=\"DW\">Day of Week</option>\n          required \n        </select> <br/><br/>\n\n        Start Date*:&nbsp;\n        <DatePicker \n          selected={this.state.startDate}\n          onChange={date => this.setState({ startDate: date})} /><br/>\n\n        End Date*:&nbsp;\n        <DatePicker \n          selected={this.state.endDate}\n          onChange={date => this.setState({ endDate: date})} /><br/><br/>\n\n        <button>Submit</button>\n    \t</form>\n    );\n  }\n}\n\nclass QueryForm extends React.Component {\n  state = { metricName1: '',\n            table1: '',\n            metricName2: '',\n            table2: '',\n            show_error: false\n          };\n  \n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const resp = await axios.post('http://localhost:5000/query', {\n      metricName1 : this.state.metricName1,\n      table1 : this.state.table1,\n      metricName2 : this.state.metricName2,\n      table2 : this.state.table2\n    });\n\n    this.setState({ metricName1: '',\n    table1: '',\n    metricName2: '',\n    table2: '',\n    show_error: false});\n\n    if (resp.data.status) {\n      this.setState({show_error: false})\n      window.Bokeh.embed.embed_item(resp.data.plot, 'plot')\n    }\n    else {\n      this.setState({show_error: true})\n    }\n\n    console.log(resp)\n  \n  };\n    \n  render() {\n  \treturn (\n      <div>\n    \t<form onSubmit={this.handleSubmit}>\n      <span className=\"formtext\"><p style={{'fontWeight':'bold','fontSize':'3vw'}}>Query Metrics</p></span>\n      <div className='metricInput' style={{\"display\":\"inline-block\"}}> <b>Metric 1</b> <br/>\n      Metric Name*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.metricName1}\n          onChange={event => this.setState({ metricName1: event.target.value})}\n          placeholder=\"metric name\" \n          required \n        /> <br/>\n\n        Table*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.table1}\n          onChange={event => this.setState({ table1: event.target.value})}\n          placeholder=\"table\" \n          required \n        /> \n      </div>\n      <div className='metricInput' style={{\"display\":\"inline-block\", \"marginLeft\":\"20px\"}}> <b>Metric 2</b> <br/>\n      Metric Name*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.metricName2}\n          onChange={event => this.setState({ metricName2: event.target.value})}\n          placeholder=\"metric name\" \n          required \n        /> <br/>\n\n        Table*:&nbsp;\n        <input \n          type=\"text\" \n          value={this.state.table2}\n          onChange={event => this.setState({ table2: event.target.value})}\n          placeholder=\"table\" \n          required \n        /> \n      </div>\n    \t  <br/><br/>\n        <button>Query</button>\n        {this.state.show_error ? <p>Metric not defined!</p>:null}\n    \t</form>\n      <div id='plot' className='bk-root'> \n\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}